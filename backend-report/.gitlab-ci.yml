---
cache:
  paths:
    - ${CI_PROJECT_DIR}/.m2/repository

variables:
  VERSION: 1.0.${CI_PIPELINE_ID}
  MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/repository
  JAVA_OPTS: -XX:MaxRAMPercentage=90 # для того, чтобы Maven не съел всю свободную оперативку
  SAST_EXCLUDED_ANALYZERS: "eslint,nodejs-scan-sast"

stages:
  - build
  - test
  - release
  - deploy

build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  # переменные CI_REGISTRY_USER, CI_REGISTRY_PASSWORD, CI_REGISTRY генерятся Гитлабом, их задавать не надо
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/backend-report"
      --dockerfile "${CI_PROJECT_DIR}/backend-report/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}/sausage-backend-report:$CI_COMMIT_SHA"
      --build-arg VERSION=$VERSION
      --cache=true

release:
  variables:
    GIT_STRATEGY: none
  image:
    name: gcr.io/go-containerregistry/crane:debug
    entrypoint: [""]
  cache: []
  stage: release
  before_script:
    - crane auth login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - crane tag $CI_REGISTRY_IMAGE/sausage-backend-report:$CI_COMMIT_SHA $VERSION

deploy-backend-report:
  stage: deploy
  image: gcr.io/docker:26.1.3-cli-alpine3.20
  before_script:
    - apk add openssh-client bash gettext
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 600 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - docker context create remote ‐‐docker "host=ssh://student@std-027-58.praktikum-services.tech"
  script:
    - export SPRING_DATA_MONGODB_URI=$SPRING_DATA_MONGODB_URI
    #- envsubst < ./backend-report/deploy.sh|ssh ${DEV_USER}@${DEV_HOST}
  environment:
    name: test/backend-report
    url: http://std-027-58.praktikum-services.tech/
  # rules:
  #   - when: manual

sonarqube-backend-report-sast:
  stage: test
  image: maven:3.8-openjdk-16
  variables:
    MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository"
    SPRING_CLOUD_VAULT_ENABLED: "false"
  script:
    - >
      mvn -f backend/pom.xml verify sonar:sonar
      -Dsonar.qualitygate.wait=true
      -Dsonar.token=$SONAR_TOKEN
      -Dsonar.host.url=$SONARQUBE_URL
      -Dsonar.projectName=$SONAR_PROJECT_KEY
      -Dsonar.projectKey=$SONAR_PROJECT_KEY_BACK
  allow_failure: true

include:
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml

spotbugs-sast:
  stage: test
  variables:
    COMPILE: "false"
    SAST_JAVA_VERSION: 11
    MAVEN_REPO_PATH: $CI_PROJECT_DIR/.m2/repository
