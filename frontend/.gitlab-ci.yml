---
cache:
  paths:
    - frontend/dist/frontend

variables:
  VERSION: 1.0.${CI_PIPELINE_ID}

stages:
   - build
   - release

build:
   stage: build
   script:
     - cd frontend
     - npm install
     - npm run build
   only:
     changes:
     - frontend/**/*

release:
   stage: release
   script:
     - tar czvf sausage-store-${VERSION}.tar.gz frontend
     - >
        curl -v -u "${NEXUS_REPO_USER}:${NEXUS_REPO_PASS}"
         --upload-file sausage-store-${VERSION}.tar.gz
         ${NEXUS_REPO_URL}/repository/${NEXUS_REPO_FRONTEND_NAME}/${VERSION}/sausage-store-${VERSION}.tar.gz
   only:
     changes:
     - frontend/**/*
      
# sonarqube-frontend-sast:
  # stage: test
  # image: 
    # name: sonarsource/sonar-scanner-cli:latest
    # entrypoint: [""]
  # script:
    # - cd frontend
    # - sonar-scanner -Dsonar.projectKey=$SONAR_PROJECT_KEY_FRONT -Dsonar.sources=. -Dsonar.host.url=$SONARQUBE_URL -Dsonar.token=$SONAR_TOKEN_FRONT
  # allow_failure: true

# telegram-notification-frontend:
  # stage: notify
  # only:
    # changes:
    # - frontend/*
    # variables:
    # - $CI_COMMIT_MESSAGE =~ /send notification/
  # script:
    # - 'curl -X POST -H "Content-type: application/json" --data "{\"chat_id\": \"-1002042084305\", \"text\": \"Sprint 2. Frontend is ready and checked. Artifact - ${CI_PROJECT_URL}/-/jobs/artifacts/${CI_COMMIT_SHA}/download?job=${JOB_NAME}\" }" https://api.telegram.org/bot${TG_bot_token}/sendMessage'
  # needs:
    # - build-frontend-code-job
